<%- include("layouts/header") %>
<%- include("layouts/navbar") %>

<div class="container my-5">
    <!-- Search Snippet Input -->
    <div class="row mb-4">
        <div class="col-12">
            <input 
                type="text" 
                id="searchSnippet" 
                class="form-control search-input" 
                placeholder="Search Snippets..." 
                aria-label="Search Snippets"
            />
            <div id="recommendations" class="mt-3" style="display: none;">
                <h5 class="recommendation-title">Recommendations:</h5>
                <ul id="recommendationList" class="list-group">
                    <!-- Recommendations will be dynamically added here -->
                </ul>
            </div>
        </div>
    </div>

    <h2 class="text-center mb-4 fw-bold animate-slide-down">üìú All Snippets</h2>

    <div class="row" id="snippetContainer">
        <!-- Snippets will be dynamically loaded here -->
    </div>

    <!-- Pagination -->
    <div class="pagination-container text-center mt-4">
        <button id="prevPage" class="btn btn-secondary pagination-btn animate-pagination-btn">‚Üê Previous</button>
        <button id="nextPage" class="btn btn-secondary pagination-btn animate-pagination-btn">Next ‚Üí</button>
    </div>

    <!-- Create Snippet Button -->
    <div class="text-center mt-4">
        <a href="/create" class="btn btn-success btn-lg create-snippet-btn">
             Create Snippet
        </a>
    </div>
</div>

<%- include("layouts/footer") %>

<!-- Prism.js for Syntax Highlighting -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-okaidia.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById('searchSnippet');
        const recommendationList = document.getElementById('recommendationList');
        const recommendations = document.getElementById('recommendations');
        const snippetContainer = document.getElementById('snippetContainer');
        const prevPageButton = document.getElementById('prevPage');
        const nextPageButton = document.getElementById('nextPage');
        
        let currentPage = 1;
        const snippetsPerPage = 3;
        let allSnippets = <%- JSON.stringify(snippets) %>; // All snippets fetched from the server

        // Function to highlight the matching part of the snippet
        function highlightSnippet(snippetText, query) {
            const regex = new RegExp(`(${query})`, 'gi');
            return snippetText.replace(regex, `<span class="highlighted">$1</span>`);
        }

        // Function to display snippets for the current page
        function displaySnippets(page) {
            snippetContainer.innerHTML = '';  // Clear current snippets
            const startIndex = (page - 1) * snippetsPerPage;
            const endIndex = page * snippetsPerPage;
            const snippetsToShow = allSnippets.slice(startIndex, endIndex);

            snippetsToShow.forEach(snippet => {
                const snippetCard = document.createElement('div');
                snippetCard.classList.add('col-md-6', 'col-lg-4', 'mb-4', 'snippet-card');
                snippetCard.innerHTML = `
                    <div class="card shadow-lg border-0 rounded-4 p-3 animate-fade-in">
                        <h4 class="fw-bold">${snippet.title}</h4>
                        <pre><code class="language-javascript">${snippet.code}</code></pre>
                        <p class="text-muted"><strong>üë§ Created By:</strong> ${snippet.userDetails.name}</p>
                        <button class="btn btn-danger w-100 mt-2 animate-button delete-snippet" data-id="${snippet._id}">
                            üóë Delete
                        </button>
                        <div class="text-center mt-2 delete-spinner" id="spinner-${snippet._id}" style="display: none;">
                            <div class="spinner-border text-danger" role="status">
                                <span class="visually-hidden">Deleting...</span>
                            </div>
                        </div>
                    </div>
                `;
                snippetContainer.appendChild(snippetCard);
            });

            // Handle the visibility of pagination buttons
            prevPageButton.style.display = page === 1 ? 'none' : 'inline-block';
            nextPageButton.style.display = endIndex >= allSnippets.length ? 'none' : 'inline-block';
        }

        // Search functionality
        searchInput.addEventListener('input', function () {
            const query = searchInput.value.toLowerCase();
            const snippets = document.querySelectorAll('.snippet-card');

            recommendationList.innerHTML = '';  // Clear previous recommendations
            let hasRecommendations = false;

            snippets.forEach(snippet => {
                const title = snippet.querySelector('h4').innerText.toLowerCase();
                const code = snippet.querySelector('pre').innerText.toLowerCase();

                // Highlight matching title and code
                if (title.includes(query) || code.includes(query)) {
                    snippet.style.display = '';
                    snippet.querySelector('h4').innerHTML = highlightSnippet(snippet.querySelector('h4').innerText, query);
                    snippet.querySelector('pre code').innerHTML = highlightSnippet(snippet.querySelector('pre code').innerText, query);

                    // Add to recommendations
                    if (title.includes(query)) {
                        hasRecommendations = true;
                        const listItem = document.createElement('li');
                        listItem.classList.add('list-group-item');
                        listItem.textContent = title;
                        recommendationList.appendChild(listItem);
                    }
                } else {
                    snippet.style.display = 'none';
                }
            });

            // Show or hide recommendations
            if (hasRecommendations && query.length > 0) {
                recommendations.style.display = 'block';
            } else {
                recommendations.style.display = 'none';
            }
        });

        // Pagination button click handling
        prevPageButton.addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                displaySnippets(currentPage);
            }
        });

        nextPageButton.addEventListener('click', function () {
            if (currentPage * snippetsPerPage < allSnippets.length) {
                currentPage++;
                displaySnippets(currentPage);
            }
        });

        // Initialize snippets display
        displaySnippets(currentPage);

        // Delete functionality
        document.querySelectorAll(".delete-snippet").forEach(button => {
            button.addEventListener("click", function () {
                const snippetId = this.getAttribute("data-id");
                const snippetCard = document.getElementById(`snippet-${snippetId}`);
                const spinner = document.getElementById(`spinner-${snippetId}`);

                // Hide delete button & show spinner
                this.style.display = "none";
                spinner.style.display = "block";

                fetch(`/api/delete/${snippetId}`, { method: "DELETE" })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            snippetCard.remove(); // Remove snippet from UI
                            if (document.querySelectorAll(".snippet-card").length === 0) {
                                snippetContainer.innerHTML = ` 
                                    <div class="col-12 text-center">
                                        <div class="alert alert-warning p-4 rounded-4 shadow">
                                            <h4 class="fw-bold">üòî No Snippets Found</h4>
                                            <p class="mb-0">Start by adding some awesome code snippets!</p>
                                        </div>
                                    </div>
                                `;
                            }
                        }
                    })
                    .catch(error => console.error("Error deleting snippet:", error));
            });
        });
    });
</script>

<style>
    /* Ensure All Snippet Boxes Are the Same Size */
    .snippet-card .card {
        height: 500px; /* Fixed height */
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        overflow: hidden;
    }

    /* Code Block Styling */
    .snippet-card pre {
        height: 350px; /* Fixed height for code blocks */
        overflow: auto; /* Enable scrolling for long code */
        background: #282c34;
        color: #fff;
        padding: 10px;
        border-radius: 8px;
        font-size: 14px;
    }

    /* Snippet Title Styling */
    .snippet-card h4 {
        font-size: 18px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Pagination Button Styles */
    .pagination-btn {
        padding: 10px 20px;
        font-size: 16px;
        margin: 0 10px;
        transition: all 0.3s ease;
    }

    .pagination-btn:hover {
        transform: scale(1.1);
        background-color: #007bff;
        color: white;
    }

    .pagination-btn-active {
        animation: bounce 0.3s ease-in-out;
    }

    /* Bounce animation */
    @keyframes bounce {
        0% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.2);
        }
        100% {
            transform: scale(1);
        }
    }

    /* Recommendations Styling */
    #recommendations {
        display: none;
        margin-top: 20px;
    }

    #recommendationList {
        max-height: 200px;
        overflow-y: auto;
    }

    .list-group-item {
        cursor: pointer;
        transition: background 0.3s ease;
    }

    .list-group-item:hover {
        background-color: #f0f0f0;
    }

    .recommendation-title {
        font-size: 18px;
        color: #6c757d;
    }

    .highlighted {
        background-color: yellow;
        font-weight: bold;
    }

    /* Card Hover Effect */
    .card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
</style>
